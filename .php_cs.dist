<?php

$finder = PhpCsFixer\Finder::create()->in(__DIR__);
return PhpCsFixer\Config::create()
	->setFinder($finder)
	->setIndent("\t")
	->setLineEnding("\n")
	->setRiskyAllowed(true)
    ->setRules([
		"@PhpCsFixer" => true,
		"@PHP71Migration" => true,
		"@PHP71Migration:risky" => true,
		"array_push" => true,
		"braces" => false,
		"comment_to_phpdoc" => true,
		"concat_space" => ["spacing" => "one"],
		"declare_strict_types" => false,
		"dir_constant" => true,
		"elseif" => false,
		"function_declaration" => ["closure_function_spacing" => "none"],
		"function_to_constant" => true,
		"global_namespace_import" => ["import_classes" => false],
		"increment_style" => false,
		"modernize_types_casting" => true,
		"no_alias_functions" => true,
		"no_extra_blank_lines" => true,
		"no_superfluous_phpdoc_tags" => [
			"allow_mixed" => true,
			"allow_unused_params" => false,
			"remove_inheritdoc" => true,
		],
		"no_unneeded_final_method" => true,
		"no_useless_sprintf" => true,
		"nullable_type_declaration_for_default_null_value" => true,
		"operator_linebreak" => false,
		"ordered_class_elements" => false,
		"php_unit_construct" => true,
		"php_unit_internal_class" => false,
		"php_unit_mock_short_will_return" => true,
		"php_unit_set_up_tear_down_visibility" => true,
		"php_unit_strict" => true,
		"php_unit_test_case_static_method_calls" => true,
		"php_unit_test_class_requires_covers" => false,
		"phpdoc_align" => false,
		"phpdoc_annotation_without_dot" => false,
		"phpdoc_scalar" => false,
		"phpdoc_summary" => false,
		"return_assignment" => false,
		"self_accessor" => true,
		"single_blank_line_at_eof" => false,
		"single_quote" => true,
		"single_space_after_construct" => [
			"constructs" => [
				// do, else, finally, and try disabled due to removal of linebreaks. These could be enabled if the 
				// "position_after_control_structures" option of the "braces" fixer was set to "next", but this would
				// enforce having blocks for every control structure.
				"abstract",
				"as",
				"attribute",
				"break",
				"case",
				"catch",
				"class",
				"clone",
				"comment",
				"const",
				"const_import",
				"continue",
				// "do",
				"echo",
				// "else",
				"elseif",
				"extends",
				"final",
				// "finally",
				"for",
				"foreach",
				"function",
				"function_import",
				"global",
				"goto",
				"if",
				"implements",
				"include",
				"include_once",
				"instanceof",
				"insteadof",
				"interface",
				"match",
				"named_argument",
				"new",
				"open_tag_with_echo",
				"php_doc",
				"php_open",
				"print",
				"private",
				"protected",
				"public",
				"require",
				"require_once",
				"return",
				"static",
				"throw",
				"trait",
				// "try",
				"use",
				"use_lambda",
				"use_trait",
				"var",
				"while",
				"yield",
				"yield_from",
			],
		],
		"standardize_increment" => false,
		"ternary_to_elvis_operator" => true,
		"trailing_comma_in_multiline_array" => false,
		"yoda_style" => false,
    ])
;